name: CI

on:
  push:
    branches: [ "dev", "main", "tests", "ci" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: macos-12

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set Default Scheme
        run: |
          cd ./flowers/flowers
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default > default
          echo Using default scheme: $default
      - name: Test
        env:
          scheme: ${{ env.default }}
          platform: 'iOS Simulator'
        run: |
          cd ./flowers/flowers
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          echo "Using device: $device"
          if [ -z "$scheme" ]; then echo "Error: No scheme provided."; exit 1; fi
          if [ "$scheme" = "default" ]; then scheme=$(cat default); fi
          if [ "$(ls -A | grep -i \\.xcworkspace\$)" ]; then filetype_parameter="workspace" && file_to_build="$(ls -A | grep -i \\.xcworkspace\$)"; else filetype_parameter="project" && file_to_build="$(ls -A | grep -i \\.xcodeproj\$)"; fi
          file_to_build=$(echo $file_to_build | awk '{$1=$1;print}')
          echo "File to build: $file_to_build"
          xcodebuild test -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device" -enableCodeCoverage YES || true

  build:
    runs-on: macos-12
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set Default Scheme
        run: |
          cd ./flowers/flowers
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default > default
          echo Using default scheme: $default
      - name: Build
        env:
          scheme: ${{ env.default }}
          platform: 'iOS Simulator'
        run: |
          cd ./flowers/flowers
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          echo "Using device: $device"
          if [ -z "$scheme" ]; then echo "Error: No scheme provided."; exit 1; fi
          if [ "$scheme" = "default" ]; then scheme=$(cat default); fi
          if [ "$(ls -A | grep -i \\.xcworkspace\$)" ]; then filetype_parameter="workspace" && file_to_build="$(ls -A | grep -i \\.xcworkspace\$)"; else filetype_parameter="project" && file_to_build="$(ls -A | grep -i \\.xcodeproj\$)"; fi
          file_to_build=$(echo $file_to_build | awk '{$1=$1;print}')
          echo "File to build: $file_to_build"
          xcodebuild build -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device" || true
